# Syntax reference:
# https://help.github.com/en/actions/automating-your-workflow-with-github-actions/workflow-syntax-for-github-actions

name: Tests

on:
  push:
    paths-ignore:
      - '**.md'
      - 'LICENSE'
  pull_request:
    paths-ignore:
      - '**.md'
      - 'LICENSE'

jobs:
  testing:
    runs-on: ubuntu-latest
    container:
      image: ${{ matrix.container }}
    strategy:
      matrix:
        cc: ['gcc', 'clang']
        container:
          - 'ubuntu:18.04'
          - 'ubuntu:20.04'
          - 'debian:10-slim'
          - 'debian:11-slim'
          - 'fedora:34'
          # igraph not (easily) available
          # - 'quay.io/centos/centos:stream8'
    steps:
      - name: Update packages
        run: |
          case ${{ matrix.container }} in
            ubuntu* | debian*)
            apt-get update
            ;;
          esac

      - name: Checkout
        uses: actions/checkout@v2

      - name: Install tgen dependencies
        run: |
          case ${{ matrix.container }} in
            ubuntu*)
              apt-get install -y \
                ${{ matrix.cc }} \
                cmake \
                libglib2.0-0 \
                libglib2.0-dev \
                libigraph0v5 \
                libigraph0-dev
              ;;
            debian*)
              apt-get install -y \
                ${{ matrix.cc }} \
                cmake \
                libglib2.0-0 \
                libglib2.0-dev \
                libigraph-dev
              ;;
            fedora* | *centos*)
              dnf install -y \
                cmake \
                glib2 \
                glib2-devel \
                igraph \
                igraph-devel
              ;;
            *)
              echo "Unhandled container ${{ matrix.container }}"
              exit 1
          esac

      - name: Build tgen
        run: mkdir -p build && cd build && CC=${{ matrix.cc }} cmake .. && make

      - name: Test mmodel
        run: bash test/run_mmodel_tests.sh

      - name: Test tgen
        run: bash test/run_tgen_integration_tests.sh

      - name: Install tgentools dependencies
        run: |
          case ${{ matrix.container }} in
            ubuntu* | debian*)
              apt install -y \
                python3 \
                python3-dev \
                python3-pip \
                python3-venv \
                libxml2 \
                libxml2-dev \
                libxslt1.1 \
                libxslt1-dev \
                libpng16-16 \
                libpng-dev \
                libfreetype6 \
                libfreetype6-dev \
                libblas-dev \
                liblapack-dev 
              ;;
            fedora* | *centos*)
              dnf install -y \
                cmake \
                glib2 \
                glib2-devel \
                igraph \
                igraph-devel
              ;;
            *)
              echo "Unhandled container ${{ matrix.container }}"
              exit 1
          esac

      - name: Build tgentools
        run: |
          python3 -m venv build/toolsenv
          source build/toolsenv/bin/activate
          pip3 install -r tools/requirements.txt
          pip3 install -I tools/

      - name: Test tgentools
        run: bash test/run_tgentools_integration_tests.sh
